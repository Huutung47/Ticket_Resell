// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SWP_Ticket_ReSell_DAO.Models;

public partial class swp1Context : DbContext
{
    public swp1Context(DbContextOptions<swp1Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Boxchat> Boxchats { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Feedback> Feedbacks { get; set; }

    public virtual DbSet<Notification> Notifications { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<Package> Packages { get; set; }

    public virtual DbSet<Report> Reports { get; set; }

    public virtual DbSet<Request> Requests { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Boxchat>(entity =>
        {
            entity.HasKey(e => e.ID_Boxchat).HasName("PK__Boxchat__23A1BC06C032CC1F");

            entity.ToTable("Boxchat");

            entity.Property(e => e.Chat_content).HasColumnType("text");

            entity.HasOne(d => d.ID_TicketNavigation).WithMany(p => p.Boxchats)
                .HasForeignKey(d => d.ID_Ticket)
                .HasConstraintName("FK__Boxchat__ID_Tick__5535A963");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.ID_Customer).HasName("PK__Customer__2D8FDE5F3EEE3BF8");

            entity.ToTable("Customer");

            entity.Property(e => e.Avata).IsUnicode(false);
            entity.Property(e => e.Average_feedback).HasColumnType("decimal(3, 2)");
            entity.Property(e => e.Contact)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Package_expiration_date).HasColumnType("datetime");
            entity.Property(e => e.Package_registration_time).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_PackageNavigation).WithMany(p => p.Customers)
                .HasForeignKey(d => d.ID_Package)
                .HasConstraintName("FK__Customer__ID_Pac__4E88ABD4");

            entity.HasOne(d => d.ID_RoleNavigation).WithMany(p => p.Customers)
                .HasForeignKey(d => d.ID_Role)
                .HasConstraintName("FK__Customer__Avata__4D94879B");
        });

        modelBuilder.Entity<Feedback>(entity =>
        {
            entity.HasKey(e => e.ID_Feedback).HasName("PK__Feedback__7CA05C3F76A9D3A4");

            entity.ToTable("Feedback");

            entity.Property(e => e.Comment).HasColumnType("text");
            entity.Property(e => e.History).HasColumnType("datetime");

            entity.HasOne(d => d.ID_OrderNavigation).WithMany(p => p.Feedbacks)
                .HasForeignKey(d => d.ID_Order)
                .HasConstraintName("FK__Feedback__ID_Ord__5AEE82B9");
        });

        modelBuilder.Entity<Notification>(entity =>
        {
            entity.HasKey(e => e.ID_Notification).HasName("PK__Notifica__09D4F166E9933BA6");

            entity.ToTable("Notification");

            entity.Property(e => e.Event)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Organizing_time).HasColumnType("datetime");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_TicketNavigation).WithMany(p => p.Notifications)
                .HasForeignKey(d => d.ID_Ticket)
                .HasConstraintName("FK__Notificat__ID_Ti__5DCAEF64");
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.ID_Order).HasName("PK__Order__EC9FA955B164EFDD");

            entity.ToTable("Order");

            entity.Property(e => e.Buyer)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Order_time).HasColumnType("datetime");
            entity.Property(e => e.Payment_method)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Seller)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Shipping_time).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_TicketNavigation).WithMany(p => p.Orders)
                .HasForeignKey(d => d.ID_Ticket)
                .HasConstraintName("FK__Order__ID_Ticket__5812160E");
        });

        modelBuilder.Entity<Package>(entity =>
        {
            entity.HasKey(e => e.ID_Package).HasName("PK__Package__10A6487296365228");

            entity.ToTable("Package");

            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Name_Package)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<Report>(entity =>
        {
            entity.HasKey(e => e.ID_Report).HasName("PK__Report__C62452948BAB248E");

            entity.ToTable("Report");

            entity.Property(e => e.Comment).HasColumnType("text");
            entity.Property(e => e.History).HasColumnType("datetime");

            entity.HasOne(d => d.ID_CustomerNavigation).WithMany(p => p.Reports)
                .HasForeignKey(d => d.ID_Customer)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Report__ID_Custo__60A75C0F");

            entity.HasOne(d => d.ID_OrderNavigation).WithMany(p => p.Reports)
                .HasForeignKey(d => d.ID_Order)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Report__ID_Order__619B8048");
        });

        modelBuilder.Entity<Request>(entity =>
        {
            entity.HasKey(e => e.ID_Request).HasName("PK__Request__D55098801FBDA85F");

            entity.ToTable("Request");

            entity.Property(e => e.History).HasColumnType("datetime");
            entity.Property(e => e.Price_want).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.ID_CustomerNavigation).WithMany(p => p.Requests)
                .HasForeignKey(d => d.ID_Customer)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Request__ID_Cust__656C112C");

            entity.HasOne(d => d.ID_TicketNavigation).WithMany(p => p.Requests)
                .HasForeignKey(d => d.ID_Ticket)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Request__ID_Tick__6477ECF3");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.ID_Role).HasName("PK__Role__43DCD32DDFB0355B");

            entity.ToTable("Role");

            entity.Property(e => e.Name_role)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.ID_Ticket).HasName("PK__Ticket__79F5DC08343DF128");

            entity.ToTable("Ticket");

            entity.Property(e => e.Description).HasColumnType("text");
            entity.Property(e => e.Event_Date).HasColumnType("datetime");
            entity.Property(e => e.Image).IsUnicode(false);
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Show_Name)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ticket_History).HasColumnType("datetime");
            entity.Property(e => e.Ticket_category)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.BuyerNavigation).WithMany(p => p.TicketBuyerNavigations)
                .HasForeignKey(d => d.Buyer)
                .HasConstraintName("FK__Ticket__Buyer__52593CB8");

            entity.HasOne(d => d.SellerNavigation).WithMany(p => p.TicketSellerNavigations)
                .HasForeignKey(d => d.Seller)
                .HasConstraintName("FK__Ticket__Image__5165187F");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}